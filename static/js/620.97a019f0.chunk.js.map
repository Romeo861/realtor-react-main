{"version":3,"file":"static/js/620.97a019f0.chunk.js","mappings":"6NAgBA,MAgHA,EAhHiBA,KACf,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAoBC,IAAuBJ,EAAAA,EAAAA,UAAS,MACrDK,GAASC,EAAAA,EAAAA,MA8Df,OA5DAC,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,GAAaC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,YAE5BC,GAAIC,EAAAA,EAAAA,IACRJ,GACAK,EAAAA,EAAAA,IAAM,OAAQ,KAAMT,EAAOU,eAC3BC,EAAAA,EAAAA,IAAQ,YAAa,SACrBC,EAAAA,EAAAA,IAAM,IAIFC,QAAkBC,EAAAA,EAAAA,IAAQP,GAC1BQ,EAAcF,EAAUG,KAAKH,EAAUG,KAAKC,OAAS,GAC3DlB,EAAoBgB,GACpB,MAAMtB,EAAW,GACjBoB,EAAUK,SAASC,GACV1B,EAAS2B,KAAK,CACnBC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,WAGd5B,EAAYD,GACZI,GAAW,EACb,CAAE,MAAO0B,GACPC,EAAAA,GAAAA,MAAY,0BACd,CACF,CAEAC,EAAe,GACd,CAACzB,EAAOU,gBA8BTgB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SACD,SAAxB5B,EAAOU,aAA0B,kBAAoB,oBAEvDd,GACC8B,EAAAA,EAAAA,MAAA,OAAKI,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAAWJ,SAAA,CACvD,KACDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAEflC,GAAYA,EAASwB,OAAS,GAChCS,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAL,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iBAAgBC,SAC3BnC,EAASyC,KAAKC,IACbN,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAEVf,GAAIc,EAAQd,GACZc,QAASA,EAAQb,MAFZa,EAAQd,UAOpBvB,IACC+B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCC,EAAAA,EAAAA,KAAA,UACEQ,QArDdlC,iBACE,IACE,MAAMC,GAAaC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,YAC5BC,GAAIC,EAAAA,EAAAA,IACRJ,GACAK,EAAAA,EAAAA,IAAM,OAAQ,KAAMT,EAAOU,eAC3BC,EAAAA,EAAAA,IAAQ,YAAa,SACrB2B,EAAAA,EAAAA,IAAWxC,IACXc,EAAAA,EAAAA,IAAM,IAEFC,QAAkBC,EAAAA,EAAAA,IAAQP,GAC1BQ,EAAcF,EAAUG,KAAKH,EAAUG,KAAKC,OAAS,GAC3DlB,EAAoBgB,GACpB,MAAMtB,EAAW,GACjBoB,EAAUK,SAASC,GACV1B,EAAS2B,KAAK,CACnBC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,WAGd5B,GAAa6C,GAAc,IAAIA,KAAc9C,KAC7CI,GAAW,EACb,CAAE,MAAO0B,GACPC,EAAAA,GAAAA,MAAY,0BACd,CACF,EA6BcG,UAAU,uBAAsBC,SACjC,oBAOPF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,uBACoB,IACI,SAAxB5B,EAAOU,aACJ,kBACA,uBAGJ,C","sources":["pages/Category.jsx"],"sourcesContent":["import {\n  collection,\n  getDocs,\n  limit,\n  orderBy,\n  query,\n  startAfter,\n  where,\n} from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { db } from \"../firebase\";\nimport \"./Offers.scss\";\nimport ListingItem from \"../components/ListingItem\";\nimport { useParams } from \"react-router-dom\";\n\nconst Category = () => {\n  const [listings, setListings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [lastFetchedListing, setLastFetchListing] = useState(null);\n  const params = useParams();\n\n  useEffect(() => {\n    async function fetchListings() {\n      try {\n        const listingRef = collection(db, \"listings\");\n        // Create query\n        const q = query(\n          listingRef,\n          where(\"type\", \"==\", params.categoryName),\n          orderBy(\"timestamp\", \"desc\"),\n          limit(8)\n        );\n\n        // Execute query\n        const querySnap = await getDocs(q);\n        const lastVisible = querySnap.docs[querySnap.docs.length - 1];\n        setLastFetchListing(lastVisible);\n        const listings = [];\n        querySnap.forEach((doc) => {\n          return listings.push({\n            id: doc.id,\n            data: doc.data(),\n          });\n        });\n        setListings(listings);\n        setLoading(false);\n      } catch (error) {\n        toast.error(\"Could not fetch listing\");\n      }\n    }\n\n    fetchListings();\n  }, [params.categoryName]);\n\n  async function onFetchMoreListings() {\n    try {\n      const listingRef = collection(db, \"listings\");\n      const q = query(\n        listingRef,\n        where(\"type\", \"==\", params.categoryName),\n        orderBy(\"timestamp\", \"desc\"),\n        startAfter(lastFetchedListing),\n        limit(4)\n      );\n      const querySnap = await getDocs(q);\n      const lastVisible = querySnap.docs[querySnap.docs.length - 1];\n      setLastFetchListing(lastVisible);\n      const listings = [];\n      querySnap.forEach((doc) => {\n        return listings.push({\n          id: doc.id,\n          data: doc.data(),\n        });\n      });\n      setListings((prevState) => [...prevState, ...listings]);\n      setLoading(false);\n    } catch (error) {\n      toast.error(\"Could not fetch listing\");\n    }\n  }\n\n  return (\n    <div className=\"offer\">\n      <h1 className=\"offer__title\">\n        {params.categoryName === \"rent\" ? \"Places for rent\" : \"Places for sale\"}\n      </h1>\n      {loading ? (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          {\" \"}\n          <div className=\"loader loader--big\"></div>\n        </div>\n      ) : listings && listings.length > 0 ? (\n        <>\n          <main>\n            <ul className=\"offer__listing\">\n              {listings.map((listing) => (\n                <ListingItem\n                  key={listing.id}\n                  id={listing.id}\n                  listing={listing.data}\n                />\n              ))}\n            </ul>\n          </main>\n          {lastFetchedListing && (\n            <div className=\"offer__load-more-btn-wrap\">\n              <button\n                onClick={onFetchMoreListings}\n                className=\"offer__load-more-btn\"\n              >\n                Load more\n              </button>\n            </div>\n          )}\n        </>\n      ) : (\n        <p>\n          There are no current{\" \"}\n          {params.categoryName === \"rent\"\n            ? \"Places for rent\"\n            : \"Places for sale\"}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Category;\n"],"names":["Category","listings","setListings","useState","loading","setLoading","lastFetchedListing","setLastFetchListing","params","useParams","useEffect","async","listingRef","collection","db","q","query","where","categoryName","orderBy","limit","querySnap","getDocs","lastVisible","docs","length","forEach","doc","push","id","data","error","toast","fetchListings","_jsxs","className","children","_jsx","style","display","justifyContent","_Fragment","map","listing","ListingItem","onClick","startAfter","prevState"],"sourceRoot":""}
{"version":3,"file":"static/js/848.a9868e38.chunk.js","mappings":"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","sources":["components/OAuth.jsx","pages/SignIn.jsx"],"sourcesContent":["import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { doc, getDoc, serverTimestamp, setDoc } from \"firebase/firestore\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { toast } from \"react-toastify\";\nimport { db } from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./OAuth.scss\";\nimport React from \"react\";\n\nexport const OAuth = React.memo(() => {\n  const navigate = useNavigate();\n  async function onGoogleClick() {\n    try {\n      const auth = getAuth();\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n\n      // check for the user\n\n      const docRef = doc(db, \"users\", user.uid);\n      const docSnap = await getDoc(docRef);\n\n      if (!docSnap.exists()) {\n        await setDoc(docRef, {\n          name: user.displayName,\n          email: user.email,\n          timestamp: serverTimestamp(),\n        });\n      }\n\n      navigate(\"/\");\n    } catch (error) {\n      toast.error(\"Could not authorize with Google\");\n    }\n  }\n  return (\n    <button onClick={onGoogleClick} type=\"button\" className=\" OAuth-btn\">\n      <FcGoogle className=\" OAuth-btn__google\" />\n      Continue with Google\n    </button>\n  );\n});\n","import React, { useState } from \"react\";\nimport \"./SignIn.scss\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { OAuth } from \"../components/OAuth\";\nimport { signInWithEmailAndPassword, getAuth } from \"firebase/auth\";\nimport { toast } from \"react-toastify\";\n\nconst SignIn = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = formData;\n  const navigate = useNavigate();\n\n  function onChange(e) {\n    setFormData((prevState) => ({\n      ...prevState,\n      [e.target.id]: e.target.value,\n    }));\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const auth = getAuth();\n      const userCredential = await signInWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      if (userCredential.user) {\n        navigate(\"/\");\n      }\n      setIsLoading(false);\n    } catch (error) {\n      toast.error(error.message);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <section className=\"form-section\">\n      <h1 className=\" form-section__title\">Sign In</h1>\n      <div className=\" form-section__form-wrapper\">\n        <div className=\"form-section__image-wrap\">\n          <img\n            src=\"https://wallpapers.com/images/hd/real-estate-house-keys-h79pvlxway8mwu2p.jpg\"\n            alt=\"key\"\n          />\n        </div>\n        <div className=\"form-section__form-wrap\">\n          <form onSubmit={onSubmit} className=\"form-section__form\">\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email address\"\n              className=\"form-section__form-input\"\n              value={email}\n              onChange={onChange}\n            />\n            <div className=\"form-section__form-input-wrap\">\n              <input\n                type={showPassword ? \"text\" : \"password\"}\n                id=\"password\"\n                placeholder=\"Password\"\n                className=\"form-section__form-input-password\"\n                onChange={onChange}\n                value={password}\n              />\n              {showPassword ? (\n                <AiFillEyeInvisible\n                  className=\"form-section__form-input-password-eye\"\n                  onClick={() => setShowPassword((prevState) => !prevState)}\n                />\n              ) : (\n                <AiFillEye\n                  className=\"form-section__form-input-password-eye\"\n                  onClick={() => setShowPassword((prevState) => !prevState)}\n                />\n              )}\n            </div>\n            <div className=\"form-section__other-detail\">\n              <p className=\"form-section__account-signing\">\n                Don't have a account?\n                <Link to=\"/sign-up\">Register</Link>\n              </p>\n              <p className=\"form-section__forgot-password\">\n                <Link to=\"/forgot-password\">Forgot password?</Link>\n              </p>\n            </div>\n            {isLoading ? (\n              <button\n                disabled\n                className=\"form-section__btn-signing\"\n                type=\"submit\"\n                style={{ cursor: \"default\", backgroundColor: \"#86a1da\" }}\n              >\n                Signing In...\n              </button>\n            ) : (\n              <button className=\"form-section__btn-signing\" type=\"submit\">\n                Sign In\n              </button>\n            )}\n            <div className=\"form-section__border-line\">\n              <p>OR</p>\n            </div>\n            <OAuth />\n          </form>\n          <div className=\"form-section__border-line\"></div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <div>\n              <span style={{ display: \"inline-block\", fontWeight: \"600\" }}>\n                Demo user email:\n              </span>{\" \"}\n              demo@gmail.com\n            </div>\n            <div>\n              <span style={{ display: \"inline-block\", fontWeight: \"600\" }}>\n                Demo user password:\n              </span>{\" \"}\n              123456\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default SignIn;\n"],"names":["OAuth","React","navigate","useNavigate","_jsxs","onClick","async","auth","getAuth","provider","GoogleAuthProvider","user","signInWithPopup","docRef","doc","db","uid","getDoc","exists","setDoc","name","displayName","email","timestamp","serverTimestamp","error","toast","type","className","children","_jsx","FcGoogle","SignIn","showPassword","setShowPassword","useState","isLoading","setIsLoading","formData","setFormData","password","onChange","e","prevState","_objectSpread","target","id","value","src","alt","onSubmit","preventDefault","signInWithEmailAndPassword","message","placeholder","AiFillEyeInvisible","AiFillEye","Link","to","disabled","style","cursor","backgroundColor","display","flexDirection","justifyContent","width","fontWeight"],"sourceRoot":""}